{"version":3,"sources":["components/feedback/Card.js","components/feedback/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Card","_id","title","description","type","created","Form","onSubmitSuccess","useState","setTitle","setDescription","setType","onSubmitForm","e","a","console","log","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","res","json","data","onSubmit","className","htmlFor","id","onChange","target","value","htmlText","map","isSelected","selected","App","isLoading","setLoading","feedbacks","setFeedbacks","useEffect","then","feedback","newFeedbacks","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.407d14df.chunk.js","sourcesContent":["const Card = ({ _id, title, description, type, created }) => {\n  return (\n    <div>\n      <h3>{title}</h3>\n      <div>\n        <span>{type}</span>\n      </div>\n      <p>{description}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import { useState } from \"react\";\n\nconst Form = ({ onSubmitSuccess }) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const types = [\n    {\n      value: \"\",\n      htmlText: \"\",\n    },\n    {\n      value: \"live\",\n      htmlText: \"Live\",\n    },\n    {\n      value: \"tutorial\",\n      htmlText: \"Tutoriel\",\n    },\n    {\n      value: \"article\",\n      htmlText: \"Article de blog\",\n    },\n  ];\n\n  const onChangeTitle = ({ target }) => {\n    setTitle(target.value);\n  };\n  const onChangeDescription = ({ target }) => {\n    setDescription(target.value);\n  };\n  const onChangeType = ({ target }) => {\n    console.log(\"target\", target.value);\n    setType(target.value);\n  };\n\n  const onSubmitForm = async (e) => {\n    console.log(\"#onSubmitForm\");\n    e.preventDefault();\n\n    // fetch(url, options)\n    // // options\n    // // // method default=\"GET\" (POST|GET\\DELETE|PUT)\n    const res = await fetch(\"/api/feedbacks\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        type,\n      }),\n    });\n    const json = await res.json();\n    onSubmitSuccess(json.data);\n    setTitle(\"\");\n    setDescription(\"\");\n    setType(\"\");\n  };\n\n  return (\n    <div>\n      <h4>Formulaire</h4>\n      <form onSubmit={onSubmitForm}>\n        <div className=\"Form-group\">\n          <label htmlFor=\"form-title\">Titre</label>\n          <input\n            id=\"form-title\"\n            onChange={onChangeTitle}\n            type=\"text\"\n            className=\"Form-title\"\n            value={title}\n          />\n        </div>\n        <div>\n          <select onChange={onChangeType}>\n            {types.map(({ value, htmlText }) => {\n              const isSelected = value === type ? true : false;\n              return (\n                <option value={value} selected={isSelected}>\n                  {htmlText}\n                </option>\n              );\n            })}\n            {/* <option value=\"\"></option>\n            <option value=\"live\">Live</option>\n            <option value=\"tutorial\">Tutoriel</option>\n            <option value=\"article\">Article de blog</option> */}\n          </select>\n          <div>\n            <textarea onChange={onChangeDescription} value={description} />\n          </div>\n          <div>\n            <button type=\"submit\">Submit</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect } from \"react\";\n\nimport Card from \"./components/feedback/Card\";\nimport Form from \"./components/feedback/Form\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [feedbacks, setFeedbacks] = useState([]);\n\n  // when the component is displayed the first time\n  // componentDidMount\n  useEffect(() => {\n    // code\n    fetch(\"/api/feedbacks\")\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(\"json\", json);\n        setLoading(false);\n        setFeedbacks(json.data);\n      });\n  }, []);\n\n  const onSubmitSuccess = (feedback) => {\n    const newFeedbacks = [...feedbacks];\n    newFeedbacks.push(feedback);\n\n    setFeedbacks(newFeedbacks);\n  };\n\n  return (\n    <div>\n      <h1 className=\"App-title\">Codiscovery Feedback</h1>\n      {isLoading && <p>Loading</p>}\n      {!isLoading &&\n        feedbacks.map((feedback) => {\n          return <Card key={feedback._id} {...feedback} />;\n        })}\n\n      <Form onSubmitSuccess={onSubmitSuccess} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}