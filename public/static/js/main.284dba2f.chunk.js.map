{"version":3,"sources":["components/feedback/Card.js","components/feedback/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Card","_id","title","description","type","created","class","className","data-badge-caption","Form","onSubmitSuccess","useState","setTitle","setDescription","setType","onSubmitForm","e","a","console","log","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","res","json","data","onSubmit","htmlFor","id","onChange","target","value","htmlText","map","for","name","App","isLoading","setLoading","feedbacks","setFeedbacks","dFeedbacks","setDFeedbacks","selectedTab","setSelectedTab","useEffect","then","filterTab","changeTab","currentTab","tab","currentFeedbacks","filter","f","href","style","paddingLeft","onClick","feedback","newFeedbacks","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.284dba2f.chunk.js","sourcesContent":["const Card = ({ _id, title, description, type, created }) => {\n  return (\n    <div class=\"card blue-grey darken-1\">\n      <div class=\"card-content white-text\">\n        <span className=\"card-title\">{title}</span>\n        <span className=\"new badge\" data-badge-caption=\"\">\n          {type}\n        </span>\n        <p>{description}</p>\n      </div>\n      <div class=\"card-action right-align\">\n        <a class=\"btn-floating disabled\">\n          <i class=\"material-icons\">thumb_up</i>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { useState } from \"react\";\n\nconst Form = ({ onSubmitSuccess }) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const types = [\n    {\n      value: \"\",\n      htmlText: \"\",\n    },\n    {\n      value: \"live\",\n      htmlText: \"Live\",\n    },\n    {\n      value: \"tutorial\",\n      htmlText: \"Tutoriel\",\n    },\n    {\n      value: \"article\",\n      htmlText: \"Article de blog\",\n    },\n  ];\n\n  const onChangeTitle = ({ target }) => {\n    setTitle(target.value);\n  };\n  const onChangeDescription = ({ target }) => {\n    setDescription(target.value);\n  };\n  const onChangeType = ({ target }) => {\n    console.log(\"target\", target.value);\n    setType(target.value);\n  };\n\n  const onSubmitForm = async (e) => {\n    console.log(\"#onSubmitForm\");\n    e.preventDefault();\n\n    // fetch(url, options)\n    // // options\n    // // // method default=\"GET\" (POST|GET\\DELETE|PUT)\n    const res = await fetch(\"/api/feedbacks\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        type,\n      }),\n    });\n    const json = await res.json();\n    onSubmitSuccess(json.data);\n    setTitle(\"\");\n    setDescription(\"\");\n    setType(\"\");\n  };\n\n  return (\n    <div>\n      <h4>Formulaire</h4>\n      <form className=\"row\" onSubmit={onSubmitForm}>\n        <div className=\"Form-group input-field col s12\">\n          <label htmlFor=\"form-title\">Titre de votre suggestion</label>\n          <input\n            id=\"form-title\"\n            onChange={onChangeTitle}\n            type=\"text\"\n            className=\"Form-title\"\n            value={title}\n          />\n        </div>\n        <div className=\"input-field col s12\">\n          <select className=\"browser-default\" onChange={onChangeType}>\n            {types.map(({ value, htmlText }) => {\n              const isSelected = value === type ? true : false;\n              return (\n                <option key={value} value={value}>\n                  {htmlText}\n                </option>\n              );\n            })}\n            {/* <option value=\"\"></option>\n            <option value=\"live\">Live</option>\n            <option value=\"tutorial\">Tutoriel</option>\n            <option value=\"article\">Article de blog</option> */}\n          </select>\n        </div>\n        <div className=\"input-field col s12\">\n          <label for=\"description\">Description de votre suggestion</label>\n          <textarea\n            id=\"description\"\n            className=\"materialize-textarea\"\n            onChange={onChangeDescription}\n            value={description}\n          />\n        </div>\n\n        <div>\n          <button\n            className=\"btn waves-effect waves-light\"\n            type=\"submit\"\n            name=\"action\"\n          >\n            Submit\n            <i className=\"material-icons right\">send</i>\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect } from \"react\";\n\nimport Card from \"./components/feedback/Card\";\nimport Form from \"./components/feedback/Form\";\n\n// import \"./App.css\";\n\nconst App = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [feedbacks, setFeedbacks] = useState([]);\n  const [dFeedbacks, setDFeedbacks] = useState([]);\n  // selectedTab\n  // // live | tutorial | article |Â form\n  const [selectedTab, setSelectedTab] = useState(\"live\");\n\n  // when the component is displayed the first time\n  // componentDidMount\n  useEffect(() => {\n    // code\n    fetch(\"/api/feedbacks\")\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(\"json\", json);\n        setLoading(false);\n        setFeedbacks(json.data);\n        filterTab(json.data, selectedTab);\n      });\n  }, []);\n\n  const onSubmitSuccess = (feedback) => {\n    const newFeedbacks = [...feedbacks];\n    newFeedbacks.push(feedback);\n\n    setFeedbacks(newFeedbacks);\n    filterTab(newFeedbacks, feedback.type);\n  };\n\n  const changeTab = (currentTab) => {\n    // console.log(\"\");\n    filterTab(feedbacks, currentTab);\n  };\n\n  const filterTab = (feedbacks, tab) => {\n    // console.log(\"feedbacks\", feedbacks);\n    // console.log(\"tab\", tab);\n    const currentFeedbacks = feedbacks.filter((f) => {\n      return f.type === tab;\n    });\n    setSelectedTab(tab);\n    setDFeedbacks(currentFeedbacks);\n  };\n\n  return (\n    <>\n      <nav>\n        <div class=\"nav-wrapper\">\n          <a\n            href=\"#\"\n            class=\"brand-logo\"\n            style={{\n              paddingLeft: \"1em\",\n            }}\n          >\n            Codiscovery Feedback\n          </a>\n          <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n            {/* <li>\n              <a href=\"sass.html\">Sass</a>\n            </li>\n            <li>\n              <a href=\"badges.html\">Components</a>\n            </li>\n            <li>\n              <a href=\"collapsible.html\">JavaScript</a>\n            </li> */}\n          </ul>\n        </div>\n      </nav>\n      <div className=\"container\">\n        <h1 className=\"App-title\">Codiscovery Feedback</h1>\n        <div className=\"row\">\n          <div className=\"col\">\n            <a\n              className=\"waves-effect waves-light btn red pulse\"\n              onClick={() => changeTab(\"form\")}\n            >\n              <i className=\"material-icons left\">add</i>\n              Nouveau\n            </a>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col s4\">\n            <a\n              className=\"waves-effect waves-light btn-large\"\n              onClick={() => changeTab(\"live\")}\n            >\n              <i class=\"material-icons left\">live_tv</i>Lives\n            </a>\n          </div>\n          <div className=\"col s4\">\n            <a\n              className=\"waves-effect waves-light btn-large\"\n              onClick={() => changeTab(\"tutorial\")}\n            >\n              <i class=\"material-icons left\">school</i>Tutoriels\n            </a>\n          </div>\n          <div className=\"col s4\">\n            <a\n              className=\"waves-effect waves-light btn-large\"\n              onClick={() => changeTab(\"article\")}\n            >\n              <i class=\"material-icons left\">library_books</i>Articles de blog\n            </a>\n          </div>\n        </div>\n        {isLoading && <p>Loading</p>}\n        {!isLoading &&\n          selectedTab !== \"form\" &&\n          dFeedbacks.map((feedback) => {\n            return <Card key={feedback._id} {...feedback} />;\n          })}\n\n        {selectedTab === \"form\" && <Form onSubmitSuccess={onSubmitSuccess} />}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}